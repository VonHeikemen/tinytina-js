{
  "name": "Name of the schema",
  "description": [
    "Some multiline description about stuff", 
    "Look, another line", 
    "",
    "things..."
  ],
  "hide": ["api-key"],
  "globals": {
    "secret-thing": "no-one-should-see-me",
    "name": "some",
    "lastname": "body",
    "fullname": "{name} {lastname}",
    "email": "{test-email}"
  },
  "envs": {
    "development": {
      "host": "http://localhost:3000",
      "real-email": "the-real-deal-in-dev",
      "test-email": "not-real-deal"
    },
    "testing": {
      "host": "https://test.example.com",
      "real-email": "the-real-deal-in-test",
      "test-email": "stuff"
    }
  },
  "collections": [
    {
      "id": "short-id",
      "name": "A collection",
      "description": "This is a service collection",
      "requests": [
        {
          "id": "also-short",
          "name": "The full name of the thing",
          "description": "What the thing does",
          "url": "{host}/service/register",
          "method": "POST",
          "headers": [
            { "name": "Authorization", "value": "{api-key}", "metadata": {
              "Type": "String",
              "Required": "Yes"
            } }
          ],
          "data": [
            { "name": "name", "value": "some test value", "metadata": {
              "Type": "String",
              "Required": "Yes"
            } },
            { "name": "lastname", "value": "{lastname}-ish", "metadata": {
              "Type": "String",
              "Required": "No"
            } },
            { "name": "email", "value": "{email}", "metadata": {
              "Type": "String",
              "Required": "Maybe"
            } },
            { "name": "code", "value": "{secret-thing}", "metadata": {
              "Type": "String",
              "Arbitrary Column": "A description of whatever",
              "Required": "Yes"
            } }
          ],
          "query": [
            { "name": "stuff", "value": "this goes in the URL as a querystring" }
          ],
          "files": [
            { "name": "image", "value": "/tmp/yourface.jpg" }
          ]
        },
        {
          "id": "json-data",
          "url": "{host}/service/register",
          "method": "POST",
          "headers": [
            { "name": "Authorization", "value": "{api-key}" }
          ],
          "data-description": [
            { "name": "name", "value": "some name" },
            { "name": "lastname", "value": "a last name" },
            { "name": "email", "value": "this better be an email" },
            { "name": "code", "value": "an object with a secret thing" },
            { "name": "code.payload", "value": "the secret thing" }
          ],
          "data": {
            "name": "some test value",
            "lastname": "{lastname}",
            "email": "{email}",
            "code": {
              "payload": "{secret-thing}"
            }
          },
          "query": [
            { "name": "stuff", "value": "this goes in the URL as a querystring" }
          ]
        }
      ],
      "collections": [
        {
          "id": "oh-look",
          "name": "A nested collection",
          "description": "I hope you see where i'm going with this",
          "requests": [
            {
              "id": "download-face",
              "name": "Download a face",
              "url": "{host}/service/download",
              "output": {
                "path": "/i-dont-check-working-dir/{secret-thing}/faces",
                "filename": "{fullname}face.jpg"
              },
              "query": [
                { "name": "other-stuff", "value": "no method? Don't worry, this is GET" }
              ]
            },
            {
              "id": "guess-filename",
              "url": "{host}/service/download",
              "method": "GET",
              "output": {
                "path": "/tmp/really-use-full-paths"
              }
            }
          ],
          "collections": [
            {
              "id": "3rd-level",
              "requests": [
                {
                  "id": "lonely-get",
                  "name": "deeply nested",
                  "description": "A nested request",
                  "url": "{host}/service/download",
                  "method": "GET"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "another",
      "requests": [
        {
          "name": "don't know why no id",
          "url": "http://example.com?code={api-key}"
        },
        {
          "url": "http://not-a-good-idea-but-still-possible.example.com"
        },
        {
          "id": "has-id",
          "url": "http://that-is-better.example.com"
        }
      ]
    }
  ]
}
